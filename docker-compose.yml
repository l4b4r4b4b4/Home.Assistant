version: '3'

volumes:
  db-data-dev:
  db-config-dev:
  nodered-data:
  grafana-data: 
  influxdb-data:

networks:
  home-area-net:
    driver: bridge
  # web:
  #   external: true

services:
  aggregator-plattform:
    build:
      context: ./aggregator-plattform
      dockerfile: Dockerfile.dev
    volumes:
      # - './aggregator-plattform/api-lib:/usr/src/app/api-lib'
      - './aggregator-plattform/assets:/usr/src/app/assets'
      - './aggregator-plattform/components:/usr/src/app/components'
      # - './aggregator-plattform/data:/usr/src/app/data'
      # - './aggregator-plattform/helpers:/usr/src/app/helpers'
      # - './aggregator-plattform/lib:/usr/src/app/lib'
      - './aggregator-plattform/pages:/usr/src/app/pages'
      - './aggregator-plattform/public:/usr/src/app/public'
      # - './aggregator-plattform/store:/usr/src/app/store'
      - './aggregator-plattform/node_modules:/usr/src/app/node_modules'
      # - './aggregator-plattform/upload/:/tmp'
      - './aggregator-plattform/next.config.js:/usr/src/app/next.config.js'
      - './aggregator-plattform/next-i18next.config.js:/usr/src/app/next-i18next.config.js'
    logging:
      options:
        max-size: "1m"
        max-file: "1"
    # ports:
    #   - '10234:3000'
    restart: always
    networks:
      - home-area-net
    #   - web
    # labels:
    #   - 'traefik.enable=true'
    #   - 'traefik.docker.network=web'
    #   # - "traefik.http.routers.safebasket-frontend-dev.rule=Host(`safebasket.de`) || Host(`www.safebasket.de`)"
    #   - 'traefik.http.routers.safebasket-frontend-dev-2.rule=Host(`dev.safebasket.de`)'
    #   - 'traefik.http.routers.safebasket-frontend-dev-2.entrypoints=websecure'
    #   - 'traefik.http.routers.safebasket-frontend-dev-2.tls=true'
    #   - 'traefik.http.routers.safebasket-frontend-dev-2.service=safebasket-frontend-dev-2'
    #   - 'traefik.http.routers.safebasket-frontend-dev-2.tls.certresolver=lets-encrypt'
    #   - 'traefik.http.services.safebasket-frontend-dev-2.loadbalancer.server.port=3000'
    #   # - "traefik.http.routers.safebasket-frontend-dev-2.rule=Host(`safebasket.de`) || Host(`www.safebasket.de`)"
    #   - "traefik.http.routers.safebasket-frontend-dev-2.middlewares=auth,compress"
    #   - "traefik.http.middlewares.compress.compress=true"
    #   - "traefik.http.middlewares.auth.basicauth.users=yoda:$$apr1$$6CXU2X4x$$qo.fZZDvtxOW/ZMtUo/jM/,neo:$$apr1$$S7sKCN1a$$drJb0vdTtwQROhtNBboxR."
      ## Mongo Database Backend

  forecaster:
    restart: always
    build: ./forecaster
    ports:
      - 5000:80
    volumes:
      - ./forecaster/app:/app
    depends_on:
      - influxdb
    networks:
      - home-area-net
    # command: /start-reload.sh
    # environment:
    #   - MONGO_USER=yoda
    #   - MONGO_PORT=27017
    #   - MONGO_HOST=mongodb
    #   - MONGO_PASS=OTvJLn3GkK8cfeEwgsTIAxHR36FX9QUfdaXcexDH4W9XR76mOPiepQcfB5T3Mdzv
  
  maintenance-agent:
    restart: always
    build: ./maintenance-agent
    ports:
      - 5001:80
    volumes:
      - ./maintenance-agent/app:/app
    depends_on:
      - influxdb
    networks:
      - home-area-net
  spear-rest:
    image: "dailab/spear-rest-interface"
    restart: always
    networks:
      - home-area-net
    ports:
      - 8080:8080

  nodered:
    image: nodered/node-red-docker:v8
    restart: unless-stopped
    ports:
      - 1880:1880
      - 9229:9229
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - nodered-data:/data

  home-assistant:
    container_name: home-assistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./home-assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
      - "2003:2003"
    env_file:
      - 'env.influxdb'
    volumes:
      # Data persistency
      - influxdb-data:/var/lib/influxdb

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    links:
      - influxdb
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - 'env.grafana'
    user: "0"
    links:
      - influxdb
    volumes:
      # Data persistency
      - grafana-data:/var/lib/grafana
  
  mongodb:
    # container_name: mongodb
    # build: db
    image: mongo:latest
    volumes:
      - db-data-dev:/data/db
      - db-config-dev:/data/configdb
    #   - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
    env_file:
      - .env
    environment:
      # - MONGO_INITDB_ROOT_USERNAME=yoda
      # - MONGO_INITDB_ROOT_PASSWORD=OTvJLn3GkK8cfeEwgsTIAxHR36FX9QUfdaXcexDH4W9XR76mOPiepQcfB5T3Mdzv
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      # - MONGODB_USER=${MONGO_INITDB_USERNAME}
      # - MONGODB_DATABASE=${MONGO_INITDB_DATABASE}
      # - MONGODB_PASS=${MONGO_INITDB_PASSWORD}
      # expose:
      #   - 27017
    ports:
      - "27021:27017"
    restart: always
    command: [ --auth ]
    networks:
      - home-area-net
      # - web

 # gekko:
  #   restart: always
  #   build: ./gekko
  #   # ports:
  #   #   - 8080:80
  #   volumes:
  #     - ./gekko/app:/app
  #   # depends_on:
  #   #   - redis
  #   command: /start-reload.sh
  #   networks:
  #     - home-area-net
  #   # environment:
  #   #   - MONGO_USER=yoda
  #   #   - MONGO_PORT=27017
  #   #   - MONGO_HOST=mongodb
  #   #   - MONGO_PASS=OTvJLn3GkK8cfeEwgsTIAxHR36FX9QUfdaXcexDH4W9XR76mOPiepQcfB5T3Mdzv

  # conductor:
  #   restart: always
  #   build: ./conductor
  #   # ports:
  #   #   - 8080:80
  #   volumes:
  #     - ./conductor/app:/app
  #   # depends_on:
  #   #   - redis
  #   command: /start-reload.sh
  #   networks:
  #     - home-area-net